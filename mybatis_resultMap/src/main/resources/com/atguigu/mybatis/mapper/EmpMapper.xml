<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">

<!--    Emp getEmpByEmpId(@Param("empId") Integer empId);
        -->
<!--    <select id="getEmpByEmpId" resultType="Emp">-->
    <!-- 此处的Emp表中的字段和Emp类中的属性并不是对应的,例如表中的id属性名称为:emp_id 而类中的属性名称为: empId-->
    <!--解决方法1:对表中的字段名取别名来解决 -->
        <!--select emp_id empId, emp_name empName,age,gender  from t_emp  where emp_id = #{empId} -->
<!--    </select> -->
<!--    <select id="getEmpByEmpId" resultType="Emp">-->
    <!-- 解决方法2:使用mybatis中的全局设置 -->
        <!-- select * from t_emp where emp_id = #{empId} -->
<!--    </select>-->

    <!-- 解决方法3:使用resultMap自定义映射处理-->
<!--    type 用于指定处理映射关系的实体类的类型-->
    <resultMap id="empResultMap" type="Emp">
<!--        resultMap中有四个常用子标签 :
            id: 处理主键的映射
            result: 处理普通字段的映射
            association: 处理多对一 (处理实体类类型的属性)
            collection: 处理一对多-->

<!--        column:设置映射关系中的的字段名,必须是Sql查询出的某个字段
            property:设置映射关系中的属性的属性名,必须是处理的实体类类型中的属性名 -->
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>
    <select id="getEmpByEmpId" resultMap="empResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>

<!--    Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId);-->

<!--    处理多对一的映射关系:
        1.级联方式处理-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>
<!--    2.association -->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
<!--        association:处理多对一的映射关系(处理实体类类型的属性)
            property:设置需要处理映射关系的属性的属性名
            javaType:设置要处理的属性的类型-->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
<!--    3.分步查询  优点：可以实现延迟加载-->
<!--Emp getEmpAndDeptByStepOne(@Param("empId") Integer empId);-->
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
<!--        select:调用其他的查询语句
            column:调用其他查询语句需要的条件,此处为 dept_id
            fetchType: 控制使用延迟加载还是立即加载（lazy | eager）
            -->
        <association property="dept"
            select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
            column="dept_id"></association>


    </resultMap>
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>

    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMapTwo">
        select t_emp.*,t_dept.*
        from t_emp
        left join t_dept
        on t_emp.dept_id = t_dept.dept_id
        where t_emp.emp_id = #{empId}
    </select>

<!--    List<Emp> getDeptAndEmpByStepTwo(@Param("deptId") Integer deptId);-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where dept_id = #{deptId}
    </select>
</mapper>